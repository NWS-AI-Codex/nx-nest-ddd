import { Aggregate, AggregateRoot, EventHandler, UUID } from '@ocoda/event-sourcing';
import { <%= hyphenToCapital(name) %>CreatedEvent } from '../events/<%= name %>.event';

export class <%= hyphenToCapital(name) %>Id extends UUID {}

@Aggregate({ streamName: '<%= name %>' })
export class <%= hyphenToCapital(name) %> extends AggregateRoot {
  public id: <%= hyphenToCapital(name) %>Id;

  public static create(id: <%= hyphenToCapital(name) %>Id) {
    const instance = new <%= hyphenToCapital(name) %>();
    instance.applyEvent(
      new <%= hyphenToCapital(name) %>CreatedEvent(id.value)
    );
    return instance;
  }

  @EventHandler(<%= hyphenToCapital(name) %>CreatedEvent)
  protected on<%= hyphenToCapital(name) %>CreatedEvent(event: <%= hyphenToCapital(name) %>CreatedEvent) {
    this.id = <%= hyphenToCapital(name) %>Id.from(event.id);
  }
}
